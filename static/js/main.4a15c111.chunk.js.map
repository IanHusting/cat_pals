{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/CounterButton.js","components/Header.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","App.js","actions/actions.js","actions/types.js","reducers/reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","props","_props$character","character","phone","name","email","react_default","a","createElement","className","src","concat","alt","CardList","renderList","_this","characters","map","components_Card","key","id","this","React","Component","CounterButton","count","updateCount","setState","Object","objectSpread","nextProps","nextState","_this2","color","onClick","PureComponent","Header","components_CounterButton","SearchBox","_ref","searchField","searchChange","type","placeholder","onChange","value","styles","scrollStyle","overflowY","border","flex","Scroll","style","children","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","info","renderComponent","App","onSearchChange","event","setSearchField","target","filterCats","_this$props","filter","toLowerCase","includes","requestCats","_this$props2","isPending","displayedCats","length","components_Scroll","components_CardList","components_Header","components_SearchBox","components_ErrorBoundary","renderCatList","connect","searchRobots","text","payload","dispatch","axios","get","cats","data","message","initial_state_search","initial_state_cats","combineReducer","combineReducers","arguments","undefined","action","logger","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4a15c111.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = (props) => {    \r\n    const {phone, name, email} = props.character;\r\n    return(        \r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${phone}?set=set4`} alt={name}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nclass CardList extends React.Component{    \r\n\r\n    renderList = () => {\r\n        console.log(this.props);\r\n        return(this.props.characters.map(character => {            \r\n            return(                \r\n                    <Card key={character.id} character={character}/>                \r\n            );\r\n        }));\r\n    }\r\n\r\n    render()\r\n    {        \r\n        return(\r\n            <div>                \r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n/*\r\nPureComponent rendert d'Komponent just, wa sech d'Props geännert hunn.\r\nHunn de Nodeel, dass se Ännerungen an verschachtelten Objekt net erkennen. \r\n*/ \r\nclass CounterButton extends React.PureComponent {\r\n    state =  {\r\n        count: 0\r\n    }\r\n    /* \r\n    shouldComponentUpdate get opgeruff wann en Update usteet.\r\n    Wann et true zreckget, get d'Component nei gerendert, bei false net.\r\n    Huet d'Parameter nextProps & nextState.\r\n    Muss d'Performance net zwëngend verbesseren, well doduerch vrun all Render eng zousätzlesch Funktioun opgeruff gët.     \r\n    */\r\n    shouldComponentUpdate(nextProps, nextState) {    \r\n        return (this.state.count !== nextState.count)\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState({...this.state, count: this.state.count+1})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button \r\n                color={this.props.color}\r\n                onClick={() => this.updateCount()}>\r\n                Count: {this.state.count}\r\n            </button>\r\n        );\r\n    }\r\n}\r\nexport default CounterButton;","import React from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends React.Component {\r\n    /* \r\n    shouldComponentUpdate get opgeruff wann en Update usteet.\r\n    Wann et true zreckget, get d'Component nei gerendert, bei false net.\r\n    Huet d'parameter nextProps & nextState.\r\n    */\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <h1 className=\"f2\">Cat Pals</h1>                \r\n                <CounterButton color={'red'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <label>\r\n                <input \r\n                    className=\"pa3 ba b--green bg-lightest-blue\"\r\n                    type='Search' \r\n                    placeholder=\"Search cats\"                \r\n                    onChange={searchChange}                \r\n                    value={searchField}\r\n                    />\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div style={styles.scrollStyle}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    scrollStyle: {\r\n            overflowY: 'scroll',\r\n            border: '1px solid black',\r\n            flex: 1\r\n    }\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }    \r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    renderComponent()\r\n    {\r\n        if(this.state.hasError)\r\n        {\r\n            return(\r\n                <h1>I meant to do that.</h1>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>{this.renderComponent()}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setSearchField, requestCats} from './actions/actions';\r\n\r\nimport CardList from './components/CardList';\r\nimport Header from './components/Header';\r\nimport SearchBox from './components/SearchBox';\r\nimport Scroll from './components/Scroll';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\n\r\nimport './App.css';\r\n\r\n/* npm run build generéiert eng optméiert Build-Versioun vum Programm an <PROJEKT-NUMM>/build */\r\nclass App extends React.Component {       \r\n\r\n    componentDidMount() {        \r\n        this.props.requestCats();\r\n    }\r\n\r\n    onSearchChange = (event) => {                                   \r\n        this.props.setSearchField(event.target.value);\r\n    }\r\n\r\n    filterCats = () => {      \r\n        const {characters, searchField} = this.props;                  \r\n        return characters.filter(character => {\r\n            return character.name.toLowerCase().includes(searchField.toLowerCase())});    \r\n    }\r\n\r\n    renderCatList()\r\n    {     \r\n        const {isPending, error} = this.props;       \r\n        if(!isPending)\r\n        {\r\n            if(!error)\r\n            {\r\n                const displayedCats = this.filterCats();\r\n                return( !displayedCats || !displayedCats.length ? <h1>Error fetching cats!</h1> : <Scroll><CardList characters={displayedCats}/></Scroll>);\r\n            }\r\n            return(\r\n                <h1>Error fetching cats: {error}</h1>\r\n            )\r\n        }\r\n        return(\r\n            <h1>Loading...</h1>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div className=\"tc\">\r\n                <Header/>\r\n                <SearchBox searchField={this.props.searchField} searchChange={this.onSearchChange}/>\r\n                <ErrorBoundary>\r\n                    {this.renderCatList()}\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return { searchField: state.searchRobots.searchField, characters: state.requestCats.characters, error: state.requestCats.error, isPending: state.requestCats.isPending};\r\n}\r\n\r\nexport default connect(mapStateToProps, {setSearchField, requestCats})(App);","import axios from 'axios';\r\n\r\nimport {SEARCH_TYPE, REQUEST_CATS_PENDING, REQUEST_CATS_FAILED, REQUEST_CATS_SUCCESS} from './types';\r\n// Klammeren hannert => wann just e Wert zreckgi get. Spuert den Return.\r\nexport const setSearchField = (text) => ({\r\n    type: SEARCH_TYPE,\r\n    payload: text\r\n});\r\n\r\nexport const requestCats = () => dispatch => {\r\n    dispatch({\r\n        type: REQUEST_CATS_PENDING        \r\n    });\r\n    axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(cats => {\r\n            dispatch({\r\n                type: REQUEST_CATS_SUCCESS,\r\n                payload: cats.data,                \r\n            });          \r\n        })\r\n        .catch(error => {            \r\n          dispatch({\r\n              type: REQUEST_CATS_FAILED,\r\n              payload: error.message\r\n            })}\r\n        );      \r\n}","export const SEARCH_TYPE = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUEST_CATS_PENDING = \"REQUEST_CATS_PENDING\";\r\nexport const REQUEST_CATS_SUCCESS = \"REQUEST_CATS_SUCCESS\";\r\nexport const REQUEST_CATS_FAILED = \"REQUEST_CATS_FAILED\";","import {SEARCH_TYPE, REQUEST_CATS_FAILED, REQUEST_CATS_PENDING, REQUEST_CATS_SUCCESS} from '../actions/types';\r\n\r\nconst initial_state_search = {searchField: '', };\r\nconst initial_state_cats = {characters: [], error: null, isPending: true};\r\n\r\nexport const searchRobots = (state = initial_state_search, action = {}) => {\r\n    switch(action.type)\r\n    {\r\n        case SEARCH_TYPE:        \r\n            return {...state, searchField: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const requestCats = (state = initial_state_cats, action = {}) => {\r\n    switch(action.type)\r\n    {\r\n        case REQUEST_CATS_PENDING:\r\n            return {...state, isPending: true};\r\n        case REQUEST_CATS_FAILED:\r\n            return {...state, isPending: false, error: action.payload};\r\n        case REQUEST_CATS_SUCCESS:            \r\n            return {...state, isPending: false, error: null, characters: action.payload};\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nimport App from './App';\nimport {searchRobots, requestCats} from './reducers/reducers';\n\nconst combineReducer = combineReducers({searchRobots, requestCats})\nconst logger = createLogger();\nconst store = createStore(combineReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}